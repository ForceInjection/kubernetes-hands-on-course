# Kubernetes Deployment 定义文件
# 用于创建和管理无状态应用的部署

apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp3-deployment
  labels:
    app: myapp3
    version: v3.0
    tier: frontend
    environment: demo
  annotations:
    description: "Demo web application deployment"
    maintainer: "kubernetes-team@company.com"
    deployment.kubernetes.io/revision: "1"
spec:
  # 副本数量
  replicas: 3
  
  # 选择器 - 必须匹配 Pod 模板中的标签
  selector:
    matchLabels:
      app: myapp3
      version: v3.0
  
  # 更新策略
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1      # 最大不可用 Pod 数
      maxSurge: 1           # 最大超出期望副本数的 Pod 数
  
  # 保留的历史版本数
  revisionHistoryLimit: 10
  
  # 部署进度截止时间（秒）
  progressDeadlineSeconds: 600
  
  # Pod 模板
  template:
    metadata:
      labels:
        app: myapp3
        version: v3.0
        tier: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
    spec:
      # 安全上下文
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      
      # 容器定义
      containers:
      - name: myapp3-container
        image: grissomsh/kubenginx:3.0.0
        imagePullPolicy: IfNotPresent
        
        # 端口配置
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        
        # 资源请求和限制
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        
        # 环境变量
        env:
        - name: APP_VERSION
          value: "3.0.0"
        - name: ENVIRONMENT
          value: "demo"
        
        # 存活性探针
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # 就绪性探针
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # 安全上下文
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        # 卷挂载（如果需要）
        # volumeMounts:
        # - name: tmp-volume
        #   mountPath: /tmp
      
      # 重启策略
      restartPolicy: Always
      
      # DNS 策略
      dnsPolicy: ClusterFirst
      
      # 终止宽限期（秒）
      terminationGracePeriodSeconds: 30
      
      # 卷定义（如果需要）
      # volumes:
      # - name: tmp-volume
      #   emptyDir: {}

---
# 字段说明:
# - replicas: 期望的 Pod 副本数量
# - selector: 用于选择管理的 Pod
# - strategy: 更新策略（RollingUpdate 或 Recreate）
# - template: Pod 模板，定义 Pod 的规格
# - revisionHistoryLimit: 保留的历史版本数
# - progressDeadlineSeconds: 部署进度截止时间

# 重要提示:
# 1. selector.matchLabels 必须与 template.metadata.labels 匹配
# 2. 建议设置资源请求和限制
# 3. 配置健康检查探针提高可靠性
# 4. 使用有意义的标签便于管理
# 5. 生产环境建议使用具体的镜像标签而非 latest


    